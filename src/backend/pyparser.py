# -*- coding: utf-8 -*-
# parser.py

import codecs
import ConfigParser


def convert_file(input_file, output_file):
    """
    The default Group Policy file generated by secedit is UTF-16.
    This needs to be converted to UTF-8 so we can parse the data
    as plain text and not the encoded hex.
    :param input_file:
    :param output_file:
    :return: none
    """
    input = codecs.open(input_file, 'rb', encoding='utf-16')
    output = codecs.open(output_file, 'wb', encoding='utf-8')

    with input, output:
        while True:
            chunk = input.read(4096)
            if not chunk:
                break

            # remove vertical tabs
            chunk = chunk.replace(u'\000B', u'')
            output.write(chunk)


def read_gpo(filename):
    """
    After having converted the GroupPolicy.inf file to UTF-8, we can not read the file and
    produce a OrderedDict data structure
    :param filename:
    :return OrderedDict(results)
    """

    gpo_results = dict()
    config = ConfigParser.ConfigParser()
    config.read(filename)
    config.sections()
    sections = config.sections()
    # Returns  [u'Unicode', u'System Access', u'Event Audit', u'Registry Values', u'Privilege Rights', u'Version']

    # create dictionary values
    minpwdage = config.get('System Access', 'MinimumPasswordAge')
    maxpwdage = config.get('System Access', 'MaximumPasswordAge')
    minpwdlength = config.get('System Access', 'MinimumPasswordLength')
    passcomplex = config.get('System Access', 'PasswordComplexity')
    passhistory = config.get('System Access', 'PasswordHistorySize')
    passlockout = config.get('System Access', 'LockoutBadCount')

    # dump to dicts
    gpo_results = {
        'minpwdage': minpwdage,
        'maxpwdage': maxpwdage,
        'minpwdlength': minpwdlength,
        'passcomplex': passcomplex,
        'passhistory': passhistory,
        'passlockout': passlockout
    }

    return sections, gpo_results
